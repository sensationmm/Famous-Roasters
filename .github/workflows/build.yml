# This workflow will run tests and build the docker container
# for any branch different to main

name: Test and Build

on:
  push:
    branches:
      - '**'
      - '!main'

jobs:
  test-and-build:
    environment: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Setup node
        uses: actions/setup-node@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ hashFiles('**/docker-compose.yml') }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ hashFiles('**/docker-compose.yml') }}

      - name: Cache node modules
        uses: actions/cache@v2
        id: cache
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: yarn install

      - name: Lint & Prettier
        run: |
          yarn prettier
          yarn lint

      - name: Unit Tests
        run: yarn run test:ci -u
        env:
          REACT_APP_DOMAIN_BLOG: ${{ secrets.REACT_APP_DOMAIN_BLOG_PRODUCTION }}
          REACT_APP_DOMAIN_SHOP: ${{ secrets.REACT_APP_DOMAIN_SHOP_PRODUCTION }}

      - uses: actions/upload-artifact@master
        with:
          name: coverage
          path: coverage

      - name: Build & Package
        run: yarn run build
        env:
          REACT_APP_SHOPIFY_ADMIN_GRAPHQL_ENDPOINT: ${{ secrets.REACT_APP_SHOPIFY_ADMIN_GRAPHQL_ENDPOINT}}
          REACT_APP_SHOPIFY_ADMIN_ACCESS_TOKEN: ${{ secrets.REACT_APP_SHOPIFY_ADMIN_ACCESS_TOKEN}}
          REACT_APP_SHOPIFY_STOREFRONT_GRAPHQL_ENDPOINT: ${{ secrets.REACT_APP_SHOPIFY_STOREFRONT_GRAPHQL_ENDPOINT }}
          REACT_APP_SHOPIFY_STOREFRONT_ACCESS_TOKEN: ${{ secrets.REACT_APP_SHOPIFY_STOREFRONT_ACCESS_TOKEN }}
          REACT_APP_GTM_ID: ${{ secrets.REACT_APP_GTM_ID }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  sonarcloud:
    name: SonarCloud
    needs: test-and-build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/download-artifact@master
        with:
          name: coverage
          path: coverage

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        with:
          args: >
            -Dsonar.verbose=true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
